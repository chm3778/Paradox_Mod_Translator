name: 🧪 Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --timeout=300 -r requirements-minimal.txt

    - name: 🔍 Test imports
      run: |
        python test_imports.py
      env:
        PYTHONIOENCODING: utf-8

    - name: 🧪 Run tests
      run: |
        python run_tests.py
      env:
        PYTHONIOENCODING: utf-8

    - name: 🔧 Test configuration
      run: |
        python test_configuration.py
      env:
        PYTHONIOENCODING: utf-8

  build-test:
    name: Test Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --timeout=300 -r requirements.txt

    - name: 🔍 Test imports
      run: |
        python test_imports.py
      env:
        PYTHONIOENCODING: utf-8

    - name: 🧪 Run tests first
      run: |
        python run_tests.py
      env:
        PYTHONIOENCODING: utf-8

    - name: 🔧 Test PyInstaller build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name ParadoxModTranslator main.py

    - name: 🔧 Test PyInstaller build (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name ParadoxModTranslator main.py

    - name: ✅ Verify build (Windows)
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        echo "=== Listing dist directory ==="
        Get-ChildItem -Path dist\ -Force
        echo "=== Checking executable ==="
        if (Test-Path "dist\ParadoxModTranslator.exe") {
          echo "✅ ParadoxModTranslator.exe found"
          Get-Item "dist\ParadoxModTranslator.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          echo "❌ ParadoxModTranslator.exe not found"
          exit 1
        }

    - name: ✅ Verify build (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        echo "=== Listing dist directory ==="
        ls -la dist/
        echo "=== Checking executable ==="
        if [ -f "dist/ParadoxModTranslator" ]; then
          echo "✅ ParadoxModTranslator found"
          ls -la dist/ParadoxModTranslator
        else
          echo "❌ ParadoxModTranslator not found"
          exit 1
        fi
