# Paradox Mod Translator - 依赖包列表
# 
# 安装方法：
# pip install -r requirements.txt
#
# 或者使用国内镜像源加速安装：
# pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/

# ============================================================================
# 核心依赖 - Core Dependencies
# ============================================================================

# Google Gemini AI API客户端
# 用于调用Google Gemini API进行文本翻译
google-generativeai>=0.3.0

# ============================================================================
# GUI框架 - GUI Framework
# ============================================================================

# ttkbootstrap - 现代化的tkinter主题框架
# 提供美观的UI组件和主题支持
ttkbootstrap>=1.10.1

# ============================================================================
# 开发和测试工具 - Development & Testing Tools
# ============================================================================

# pytest - 现代化的Python测试框架（可选，项目当前使用unittest）
# pytest>=7.0.0
# pytest-cov>=4.0.0  # 测试覆盖率报告

# ============================================================================
# 代码质量工具 - Code Quality Tools (可选)
# ============================================================================

# black - Python代码格式化工具
# black>=23.0.0

# flake8 - Python代码风格检查工具
# flake8>=6.0.0

# mypy - Python静态类型检查工具
# mypy>=1.0.0

# ============================================================================
# 文档生成工具 - Documentation Tools (可选)
# ============================================================================

# sphinx - 文档生成工具
# sphinx>=6.0.0
# sphinx-rtd-theme>=1.2.0  # Read the Docs主题

# ============================================================================
# 打包和分发工具 - Packaging & Distribution Tools
# ============================================================================

# pyinstaller - 将Python程序打包为可执行文件
pyinstaller>=5.0.0

# cx-Freeze - 另一个Python程序打包工具（可选）
# cx-Freeze>=6.0.0

# ============================================================================
# 性能分析工具 - Performance Profiling Tools (可选)
# ============================================================================

# memory-profiler - 内存使用分析工具
# memory-profiler>=0.60.0

# line-profiler - 行级性能分析工具
# line-profiler>=4.0.0

# ============================================================================
# 日志和监控工具 - Logging & Monitoring Tools (可选)
# ============================================================================

# colorlog - 彩色日志输出
# colorlog>=6.7.0

# ============================================================================
# 配置文件处理工具 - Configuration File Tools (可选)
# ============================================================================

# pyyaml - YAML文件处理（如果需要支持YAML配置文件）
# PyYAML>=6.0.0

# toml - TOML文件处理（如果需要支持TOML配置文件）
# toml>=0.10.0

# ============================================================================
# 网络请求工具 - HTTP Request Tools (可选)
# ============================================================================

# requests - HTTP请求库（如果需要额外的网络功能）
# requests>=2.28.0

# ============================================================================
# 数据处理工具 - Data Processing Tools (可选)
# ============================================================================

# pandas - 数据分析库（如果需要处理大量翻译数据）
# pandas>=1.5.0

# numpy - 数值计算库（pandas的依赖）
# numpy>=1.24.0

# ============================================================================
# 加密和安全工具 - Encryption & Security Tools (可选)
# ============================================================================

# cryptography - 加密库（如果需要加密API密钥）
# cryptography>=40.0.0

# ============================================================================
# 系统信息工具 - System Information Tools (可选)
# ============================================================================

# psutil - 系统和进程信息（如果需要监控系统资源）
# psutil>=5.9.0

# ============================================================================
# 注意事项 - Notes
# ============================================================================
#
# 1. 核心依赖（google-generativeai, ttkbootstrap）是必需的
# 2. 其他依赖都是可选的，根据需要取消注释
# 3. 版本号使用 >= 确保兼容性，可以根据需要调整
# 4. 建议在虚拟环境中安装依赖：
#    python -m venv venv
#    source venv/bin/activate  # Linux/Mac
#    venv\Scripts\activate     # Windows
#    pip install -r requirements.txt
#
# 5. 如果遇到网络问题，可以使用国内镜像源：
#    pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/
#
# 6. 对于开发环境，建议安装开发工具：
#    pip install black flake8 mypy pytest pytest-cov
#
# 7. 对于生产环境，只需要安装核心依赖即可
#
# ============================================================================
